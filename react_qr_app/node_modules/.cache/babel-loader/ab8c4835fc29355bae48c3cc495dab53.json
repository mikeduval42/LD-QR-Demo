{"ast":null,"code":"import _regeneratorRuntime from\"/Users/michaelduval/Documents/GitHub/LD-QR-Demo/react_qr_app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/michaelduval/Documents/GitHub/LD-QR-Demo/react_qr_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React from\"react\";import ReactDOM from\"react-dom\";import\"./index.css\";import App from\"./App\";import reportWebVitals from\"./reportWebVitals\";import{asyncWithLDProvider}from\"launchdarkly-react-client-sdk\";import{deviceType,osName}from\"react-device-detect\";import getUserId from\"./util/getUserId\";import{jsx as _jsx}from\"react/jsx-runtime\";var CLIENTKEY=\"62e2d6eb99281e10e0db0cdd\";var id=getUserId();_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var LDProvider;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return asyncWithLDProvider({clientSideID:CLIENTKEY,user:{key:id,//dynamically set these custom attributes using the deviceType and osName selectors from the npm package\ncustom:{device:deviceType,operatingSystem:osName}}});case 2:LDProvider=_context.sent;ReactDOM.render(/*#__PURE__*/_jsx(LDProvider,{children:/*#__PURE__*/_jsx(App,{})}),document.getElementById(\"root\"));case 4:case\"end\":return _context.stop();}}},_callee);}))();// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","asyncWithLDProvider","deviceType","osName","getUserId","CLIENTKEY","id","clientSideID","user","key","custom","device","operatingSystem","LDProvider","render","document","getElementById"],"sources":["/Users/michaelduval/Documents/GitHub/LD-QR-Demo/react_qr_app/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { asyncWithLDProvider } from \"launchdarkly-react-client-sdk\";\nimport { deviceType, osName } from \"react-device-detect\";\nimport getUserId from \"./util/getUserId\";\n\nconst CLIENTKEY = \"62e2d6eb99281e10e0db0cdd\";\n\nlet id = getUserId();\n\n(async () => {\n  const LDProvider = await asyncWithLDProvider({\n    clientSideID: CLIENTKEY,\n    user: {\n      key: id,\n      //dynamically set these custom attributes using the deviceType and osName selectors from the npm package\n      custom: {\n        device: deviceType,\n        operatingSystem: osName,\n      },\n    },\n  });\n\n  ReactDOM.render(\n    <LDProvider>\n      <App />\n    </LDProvider>,\n    document.getElementById(\"root\")\n  );\n})();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"oTAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,SAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,IAAP,KAAgB,OAAhB,CACA,MAAOC,gBAAP,KAA4B,mBAA5B,CACA,OAASC,mBAAT,KAAoC,+BAApC,CACA,OAASC,UAAT,CAAqBC,MAArB,KAAmC,qBAAnC,CACA,MAAOC,UAAP,KAAsB,kBAAtB,C,2CAEA,GAAMC,UAAS,CAAG,0BAAlB,CAEA,GAAIC,GAAE,CAAGF,SAAS,EAAlB,CAEA,0DAAC,0KAC0BH,oBAAmB,CAAC,CAC3CM,YAAY,CAAEF,SAD6B,CAE3CG,IAAI,CAAE,CACJC,GAAG,CAAEH,EADD,CAEJ;AACAI,MAAM,CAAE,CACNC,MAAM,CAAET,UADF,CAENU,eAAe,CAAET,MAFX,CAHJ,CAFqC,CAAD,CAD7C,QACOU,UADP,eAaCf,QAAQ,CAACgB,MAAT,cACE,KAAC,UAAD,wBACE,KAAC,GAAD,IADF,EADF,CAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,EAbD,sDAAD,KAqBA;AACA;AACA;AACAhB,eAAe"},"metadata":{},"sourceType":"module"}